name: Build Geode Mod with Static CPython

on:
  workflow_dispatch:
  push:
    branches:
      - "**"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install Visual Studio Build Tools and necessary dependencies
      - name: Install Visual Studio Build Tools
        run: |
          choco install visualstudio2022buildtools

      # Clone CPython repository (or your fork)
      - name: Clone CPython
        run: |
          git clone https://github.com/YellowCat98/cpython-static.git cpython
          cd cpython

      # Configure and build CPython statically
      - name: Configure CPython for Static Build
        run: |
          cd cpython/PCbuild
          python ./build.bat --disable-shared

      - name: Build CPython Statistically
        run: |
          cd cpython/PCbuild
          msbuild pythoncore.vcxproj /p:Configuration=Release

      # Set up pybind11 (assuming itâ€™s used for bindings in your project)
      - name: Install pybind11
        run: |
          pip install pybind11

      # Build the Geode Mod (your existing build process)
      - name: Build the mod
        uses: geode-sdk/build-geode-mod@main
        with:
          bindings: geode-sdk/bindings
          bindings-ref: main
          combine: true
          target: ${{ matrix.config.target }}

  package:
    name: Package builds
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - uses: geode-sdk/build-geode-mod/combine@main
        id: build

      - uses: actions/upload-artifact@v4
        with:
          name: Build Output
          path: ${{ steps.build.outputs.build-output }}
